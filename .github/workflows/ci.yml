name: Run tests & deploy

on:
  workflow_dispatch:
  pull_request:
    types:
      - closed
    branches:
      - main
  push:
    branches:
      - main

permissions:
  contents: read
  pull-requests: write

concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  tests:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@main
      - name: Cache composer dependencies
        uses: actions/cache@main
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - name: Cache npm dependencies
        uses: actions/cache@main
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Setup Node.js
        uses: actions/setup-node@main
        with:
          node-version: '20'
      - name: Setup PHP
        uses: shivammathur/setup-php@main
        with:
          php-version: '8.3'
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv
          coverage: xdebug
      - name: Install Composer
        run: |
          php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
          php composer-setup.php
          php -r "unlink('composer-setup.php');"
      - name: Run composer install
        run: composer install --no-interaction --no-progress
      - name: Install vite
        run: npm install --save-dev vite laravel-vite-plugin
      - name: Run npm build
        run: npm run build --if-present
      - name: Prepare Laravel Application
        run: |
          cp .env.ci .env
          php artisan key:generate
      - name: Run tests
        run: php -d memory_limit=4G artisan test --coverage --coverage-cobertura=coverage.cobertura.xml --colors=never
      - name: Code Coverage Summary Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: coverage.cobertura.xml
          badge: true
          format: markdown
          output: both

      - name: Add Coverage Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: code-coverage-results.md
  build:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@main
        with:
          ref: ${{ github.event.pull_request.merge_commit_sha }}
          fetch-depth: '0'

      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.64.0 # Don't use @master or @v1 unless you're happy to test the latest version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # if you don't want to set write permissions use a PAT token
          WITH_V: true
          PRERELEASE: true
  deploy:
    needs: tests
    if: contains(fromJson('["refs/heads/main"]'), github.ref)
    name: Laravel Forge Deploy
    runs-on: ubuntu-latest
    environment:
        name: production
        url: "https://www.theperfectcodedev.com/"
    steps:
      - name: Deploy
        uses: PropFuel/laravel-forge-deploy-action@v1.0.1
        with:
          forge-api-token: ${{ secrets.FORGE_API_TOKEN }}
          forge-server-id: ${{ secrets.FORGE_SERVER_ID }}
          forge-site-id: ${{ secrets.FORGE_SITE_ID }}